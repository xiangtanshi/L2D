import torch

class Result:

    def __init__(self) -> None:
        self.resnet18 = dict()
        self.resnet18['normal'] = {
            # nohup python -u train_classifier.py --d 18 --ep 20 >> 18.log &
            'train': torch.tensor([0.7726, 0.8349, 0.8623, 0.8852, 0.8989, 0.9114, 0.9220, 0.9309, 0.9372,
                    0.9495, 0.9553, 0.9618, 0.9638, 0.9685, 0.9724, 0.9766, 0.9783, 0.9797, 0.9822, 0.9849]), 
            'val': torch.tensor([0.7234, 0.7831, 0.8081, 0.8197, 0.8264, 0.8312, 0.8447, 0.8556, 0.8610,
                    0.8637, 0.8644, 0.8651, 0.8651, 0.8651, 0.8705, 0.8712, 0.8685, 0.8725, 0.8705, 0.8732]), 
            'test': torch.tensor([0.6437, 0.7048, 0.7212, 0.7266, 0.7315, 0.7304, 0.7346, 0.7389, 0.7436,
                    0.7429, 0.7378, 0.7449, 0.7359, 0.7373, 0.7440, 0.7433, 0.7456, 0.7459, 0.7446, 0.7427])
            }
        
        self.resnet18['rsc'] = {
            # nohup python -u train_classifier.py --method rsc --d 18 --ep 20 --bs 64  >>18.log &
            {'train': torch.tensor([0.8184, 0.8654, 0.8850, 0.9096, 0.9229, 0.9349, 0.9434, 0.9557, 0.9547,
        0.9694, 0.9718, 0.9764, 0.9813, 0.9813, 0.9856, 0.9874, 0.9901, 0.9905, 0.9916, 0.9909]), 
            'val': torch.tensor([0.7810, 0.8156, 0.8278, 0.8346, 0.8475, 0.8563, 0.8542, 0.8542, 0.8529,
        0.8522, 0.8624, 0.8644, 0.8664, 0.8705, 0.8753, 0.8712, 0.8773, 0.8725, 0.8705, 0.8786]), 
            'test': torch.tensor([0.6901, 0.7272, 0.7249, 0.7271, 0.7351, 0.7304, 0.7346, 0.7460, 0.7296,
        0.7418, 0.7417, 0.7415, 0.7402, 0.7449, 0.7425, 0.7319, 0.7468, 0.7331, 0.7391, 0.7394])}
        }

        self.resnet18['adv'] = { # rand seed chosen as 0, 1001, 2001, 3001, 4001
            'train': [0.9901, 0.9898, 0.9901, 0.9899, 0.9885],
            'val': [0.8590, 0.8631, 0.8658, 0.8658, 0.8624],
            'test': [0.6899, 0.6901, 0.6967, 0.6912, 0.6890]
        }

        #----------------------------------------------------------------------------------------------#
        # uncertainty
        # ['>0.99', '>0.95', '>0.9', '0.9~0.8', '0.8~0.7', '0.7~0.6','0.6~0.5', '<0.5']
        self.resnet18['original'] = [0.975, 0.888, 0.77, 0.71, 0.61, 0.53, 0.44, 0.32]
        self.resnet18['faithful'] = [0.986, 0.928, 0.850, 0.821, 0.731, 0.606, 0.529, 0.427]
        self.resnet18['unfaithful'] = [0.953, 0.849, 0.721, 0.665, 0.569, 0.511, 0.42, 0.30]

        '''
        p_right: 
        defaultdict(<class 'int'>, {'>0.99': 4280, '>0.95': 2237, '>0.9': 948, '0.9~0.8': 1088, '0.8~0.7': 679, '0.7~0.6': 553, '0.6~0.5': 478, '<0.5': 553})
        p_total:
        defaultdict(<class 'int'>, {'>0.99': 4386, '>0.95': 2519, '>0.9': 1227, '0.9~0.8': 1523, '0.8~0.7': 1096, '0.7~0.6': 1033, '0.6~0.5': 1068, '<0.5': 1712})
        p_faith_right:
        defaultdict(<class 'int'>, {'>0.99': 2932, '>0.95': 1133, '>0.9': 414, '0.9~0.8': 395, '0.8~0.7': 248, '0.7~0.6': 157, '0.6~0.5': 142, '<0.5': 117})
        P_faith_total:
        defaultdict(<class 'int'>, {'>0.99': 2973, '>0.95': 1220, '>0.9': 487, '0.9~0.8': 481, '0.8~0.7': 339, '0.7~0.6': 259, '0.6~0.5': 268, '<0.5': 274})
        p_unfaith_right:
        defaultdict(<class 'int'>, {'>0.99': 1348, '>0.95': 1104, '>0.9': 534, '0.9~0.8': 693, '0.8~0.7': 431, '0.7~0.6': 396, '0.6~0.5': 336, '<0.5': 436})
        P_unfaith_total:
        defaultdict(<class 'int'>, {'>0.99': 1413, '>0.95': 1299, '>0.9': 740, '0.9~0.8': 1042, '0.8~0.7': 757, '0.7~0.6': 774, '0.6~0.5': 800, '<0.5': 1438})
        '''


        self.resnet50 = dict()
        self.resnet50['normal'] = {
            # nohup python -u train_classifier.py --d 50 --ep 10 >> 50.log &
            'train': torch.tensor([0.8619, 0.9019, 0.9290, 0.9433, 0.9571, 0.9664, 0.9714, 0.9782, 0.9807,0.9854]), 
            'val': torch.tensor([0.8264, 0.8759, 0.8875, 0.8847, 0.8895, 0.8969, 0.9017, 0.9044, 0.9078, 0.9058]), 
            'test': torch.tensor([0.7573, 0.7944, 0.8036, 0.8132, 0.8172, 0.8164, 0.8193, 0.8179, 0.8164, 0.8215])
            }
        
        self.resnet50['rsc'] = {
            # nohup python -u train_classifier.py --method rsc --d 50 --ep 10 --bs 64  >>50.log &
            {'train': torch.tensor([0.8935, 0.9312, 0.9493, 0.9630, 0.9750, 0.9806, 0.9830, 0.9878, 0.9879, 0.9924]), 
            'val': torch.tensor([0.8624, 0.8827, 0.8888, 0.8949, 0.8990, 0.9105, 0.8956, 0.9010, 0.9071, 0.9125]), 
            'test': torch.tensor([0.7818, 0.8071, 0.8047, 0.7998, 0.8110, 0.8066, 0.7992, 0.8216, 0.8107, 0.8134])}
        }

        self.resnet50['adv'] = { # rand seed chosen as 0, 1001, 2001, 3001, 4001
            'train': [0.9951, 0.9936, 0.9950, 0.9949, 0.9948],
            'val': [0.8956, 0.8976, 0.8956, 0.8888, 0.8963],
            'test': [0.7602, 0.7576, 0.7523, 0.7560, 0.7562]
        }

        # uncertainty
        # ['>0.99', '>0.95', '>0.9', '0.9~0.8', '0.8~0.7', '0.7~0.6','0.6~0.5', '<0.5']
        self.resnet18['original'] = [0.983, 0.926, 0.849, 0.774, 0.673, 0.578, 0.483, 0.379]
        self.resnet18['faithful'] = [0.992, 0.966, 0.882, 0.823, 0.760, 0.712, 0.529, 0.439]
        self.resnet18['unfaithful'] = [0.965, 0.884, 0.827, 0.751, 0.642, 0.541, 0.469, 0.369]

        '''
        p_right: defaultdict(<class 'int'>,         {'>0.99': 5131, '>0.95': 2812, '>0.9': 1098, '0.9~0.8': 1028, '0.8~0.7': 571, '0.7~0.6': 482, '0.6~0.5': 385, '<0.5': 461})
        p_total: defaultdict(<class 'int'>,         {'>0.99': 5216, '>0.95': 3036, '>0.9': 1293, '0.9~0.8': 1327, '0.8~0.7': 848, '0.7~0.6': 833, '0.6~0.5': 796, '<0.5': 1215})
        p_faith_right: defaultdict(<class 'int'>,   {'>0.99': 3539, '>0.95': 1486, '>0.9': 449, '0.9~0.8': 355, '0.8~0.7': 168, '0.7~0.6': 129, '0.6~0.5': 98, '<0.5': 76})
        P_faith_total: defaultdict(<class 'int'>,   {'>0.99': 3567, '>0.95': 1537, '>0.9': 509, '0.9~0.8': 431, '0.8~0.7': 221, '0.7~0.6': 181, '0.6~0.5': 185, '<0.5': 173})
        p_unfaith_right: defaultdict(<class 'int'>, {'>0.99': 1592, '>0.95': 1326, '>0.9': 649, '0.9~0.8': 673, '0.8~0.7': 403, '0.7~0.6': 353, '0.6~0.5': 287, '<0.5': 385})
        P_unfaith_total: defaultdict(<class 'int'>, {'>0.99': 1649, '>0.95': 1499, '>0.9': 784, '0.9~0.8': 896, '0.8~0.7': 627, '0.7~0.6': 652, '0.6~0.5': 611, '<0.5': 1042})
        '''
